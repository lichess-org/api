post:
  operationId: broadcastRoundCreate
  summary: Create a broadcast round
  description: |
    Create a new broadcast round to relay external games.
    This endpoint accepts the same form data as the web form.
  tags:
    - Broadcasts
  security:
    - OAuth2: ["study:write"]
  parameters:
    - in: path
      name: broadcastTournamentId
      description: The broadcast tournament ID (8 characters).
      required: true
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/x-www-form-urlencoded:
        schema:
          type: object
          properties:
            name:
              type: string
              description: |
                Name of the broadcast round. Length must be between 3 and 80 characters.
                Example: `Round 1`
            syncUrl:
              type: string
              description: |
                URL that Lichess will poll to get updates about the games. It must be publicly accessible from the Internet.
                Example: `https://myserver.org/myevent/round-10/games.pgn`
                If the syncUrl is missing, then the broadcast needs to be fed by [pushing PGN to it](#operation/broadcastPush).
            syncUrlRound:
              type: string
              description: |
                Required if `syncUrl` contains a livechesscloud link.
            startsAt:
              type: integer
              description: |
                Timestamp in milliseconds of broadcast round start. Leave empty to manually start the broadcast round.
                Example: `1356998400070`
              minimum: 1356998400070
            delay:
              type: integer
              description: |
                Delay in seconds for movements to appear on the broadcast. Leave it empty if you don't need it.
                Example: `900` (15 min)
              minimum: 0
              maximum: 1800
            period:
              type: integer
              description: |
                (Only for Admins) Waiting time for each poll.
              minimum: 2
              maximum: 60
            finished:
              type: boolean
              description: |
                Mark whether the round has been completed.
              default: false
          required:
            - name
  responses:
    "200":
      description: The broadcast round was successfully created.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
            default: "'*'"
      content:
        application/json:
          schema:
            $ref: '../../schemas/BroadcastRoundNew.yaml'
    "400":
      description: The creation of the broadcast failed.
      content:
        application/json:
          schema:
            $ref: '../../schemas/Error.yaml'
